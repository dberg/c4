###############################################################################
#
# OPTIONS:
#         BUILDTYPE: Debug (default) or Release. The build is generated under
#        	     /out/BUILDTYPE/.
#                    Ex.: make BUILDTYPE=Release
#
#         clean: remove directory out.
#                    Ex.: make clean
#
# LIBRARIES: boost
# OSX: We rely in the Boost installation from MacPorts for OSX:
#      /opt/local/include
###############################################################################
MAKEFLAGS=-r

CXX ?= g++
BUILDTYPE ?= Debug

# Release type
ifeq ($(BUILDTYPE),Release)
    CFLAGS = -Wall -Wextra -O3
else
    CFLAGS = -Wall -Wextra -g3
endif

builddir_name = out
builddir = $(builddir_name)/$(BUILDTYPE)
obj = $(builddir)/obj
bin = $(builddir)/bin
incdir := include
libdir := lib
INC = -I$(incdir)

# Darwin
UNAME := $(shell uname)
ifeq ($(UNAME), Darwin)
INC = -I$(incdir) -I/opt/local/include
endif

# Tests
gtest_dir = third_party/gtest
gtest_obj = $(builddir)/third_party/gtest
gtest_inc = $(gtest_dir)/include

test_libdir = tests/lib

.PHONY: all
all: directories $(bin)/djp $(bin)/tests

.PHONY: clean
clean:
	$(RM) -r $(builddir_name)

.PHONY: directories
directories:
	mkdir -p $(obj) $(bin) $(gtest_obj) $(test_obj)

# main djp
$(bin)/djp: $(obj)/CmdInput.o \
            $(obj)/Diagnosis.o \
            $(obj)/File.o \
            $(obj)/Lexer.o \
            $(obj)/LiteralSupport.o \
            $(obj)/Parser.o \
            $(obj)/Output.o \
            $(obj)/SourceCodeStream.o \
            $(obj)/SymbolTable.o \
            $(obj)/djp.o
	$(CXX) $(obj)/CmdInput.o \
               $(obj)/Diagnosis.o \
               $(obj)/File.o \
               $(obj)/Lexer.o \
               $(obj)/LiteralSupport.o \
               $(obj)/Parser.o \
               $(obj)/Output.o \
               $(obj)/SourceCodeStream.o \
               $(obj)/SymbolTable.o \
               $(CFLAGS) $(INC) $(obj)/djp.o -o $@

# modules
$(obj)/CmdInput.o: $(libdir)/CmdInput.cpp $(incdir)/CmdInput.h
	$(CXX) $(CFLAGS) $(INC) -c $< -o $@

$(obj)/Diagnosis.o: $(libdir)/Diagnosis.cpp $(incdir)/Diagnosis.h
	$(CXX) $(CFLAGS) $(INC) -c $< -o $@

$(obj)/File.o: $(libdir)/File.cpp $(incdir)/File.h
	$(CXX) $(CFLAGS) $(INC) -c $< -o $@

$(obj)/Lexer.o: $(libdir)/Lexer.cpp \
                $(incdir)/Lexer.h \
                $(incdir)/AST.h \
                $(incdir)/Diagnosis.h \
                $(incdir)/LiteralSupport.h \
                $(incdir)/ParserState.h \
                $(incdir)/SourceCodeStream.h \
                $(incdir)/Token.h
	$(CXX) $(CFLAGS) $(INC) -c $< -o $@

$(obj)/LiteralSupport.o: $(libdir)/LiteralSupport.cpp \
                         $(incdir)/LiteralSupport.h
	$(CXX) $(CFLAGS) $(INC) -c $< -o $@

$(obj)/Parser.o: $(libdir)/Parser.cpp \
                 $(incdir)/Parser.h \
                 $(incdir)/AST.h \
                 $(incdir)/ErrorCodes.h \
                 $(incdir)/ParserState.h \
                 $(incdir)/Token.h
	$(CXX) $(CFLAGS) $(INC) -c $< -o $@

$(obj)/Output.o: $(libdir)/Output.cpp \
                 $(incdir)/Output.h \
                 $(incdir)/AST.h \
                 $(incdir)/ErrorCodes.h \
                 $(incdir)/Token.h
	$(CXX) $(CFLAGS) $(INC) -c $< -o $@

$(obj)/SourceCodeStream.o: $(libdir)/SourceCodeStream.cpp \
	                   $(incdir)/SourceCodeStream.h
	$(CXX) $(CFLAGS) $(INC) -c $< -o $@

$(obj)/SymbolTable.o: $(libdir)/SymbolTable.cpp \
                 $(incdir)/SymbolTable.h
	$(CXX) $(CFLAGS) $(INC) -c $< -o $@

$(obj)/djp.o: $(libdir)/djp.cpp
	$(CXX) $(CFLAGS) $(INC) -c $< -o $@

# tests
$(bin)/tests: $(test_libdir)/ParserTest.cpp \
              $(test_libdir)/SymbolTableTest.cpp \
              $(test_libdir)/EmacsOutputTest.cpp \
              $(obj)/Lexer.o \
              $(obj)/LiteralSupport.o \
              $(obj)/Parser.o \
              $(obj)/Output.o \
              $(obj)/Diagnosis.o \
              $(obj)/SourceCodeStream.o \
              $(obj)/SymbolTable.o \
              $(gtest_obj)/libgtest.a

	$(CXX) -g3 $(INC) -I$(gtest_inc) $(obj)/Lexer.o \
                                     $(obj)/LiteralSupport.o \
                                     $(obj)/Parser.o \
                                     $(obj)/Output.o \
                                     $(obj)/Diagnosis.o \
                                     $(obj)/SourceCodeStream.o \
                                     $(obj)/SymbolTable.o \
                                     $(test_libdir)/ParserTest.cpp \
                                     $(test_libdir)/SymbolTableTest.cpp \
                                     $(test_libdir)/EmacsOutputTest.cpp \
                                     -o $@ \
                                     $(gtest_obj)/libgtest.a \
                                     -lpthread

$(gtest_obj)/libgtest.a: $(gtest_obj)/gtest-all.o
	ar -rv $@ $<

$(gtest_obj)/gtest-all.o: $(gtest_dir)/src/gtest-all.cc
	$(CXX) -g3 -I$(gtest_dir)/include -I$(gtest_dir) \
               -c $< -o $@
