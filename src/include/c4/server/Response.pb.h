// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Response.proto

#ifndef PROTOBUF_Response_2eproto__INCLUDED
#define PROTOBUF_Response_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace c4 {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Response_2eproto();
void protobuf_AssignDesc_Response_2eproto();
void protobuf_ShutdownFile_Response_2eproto();

class Response;

enum Response_ResponseCode {
  Response_ResponseCode_OK = 0,
  Response_ResponseCode_ERROR = 1
};
bool Response_ResponseCode_IsValid(int value);
const Response_ResponseCode Response_ResponseCode_ResponseCode_MIN = Response_ResponseCode_OK;
const Response_ResponseCode Response_ResponseCode_ResponseCode_MAX = Response_ResponseCode_ERROR;
const int Response_ResponseCode_ResponseCode_ARRAYSIZE = Response_ResponseCode_ResponseCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* Response_ResponseCode_descriptor();
inline const ::std::string& Response_ResponseCode_Name(Response_ResponseCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    Response_ResponseCode_descriptor(), value);
}
inline bool Response_ResponseCode_Parse(
    const ::std::string& name, Response_ResponseCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Response_ResponseCode>(
    Response_ResponseCode_descriptor(), name, value);
}
// ===================================================================

class Response : public ::google::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Response_ResponseCode ResponseCode;
  static const ResponseCode OK = Response_ResponseCode_OK;
  static const ResponseCode ERROR = Response_ResponseCode_ERROR;
  static inline bool ResponseCode_IsValid(int value) {
    return Response_ResponseCode_IsValid(value);
  }
  static const ResponseCode ResponseCode_MIN =
    Response_ResponseCode_ResponseCode_MIN;
  static const ResponseCode ResponseCode_MAX =
    Response_ResponseCode_ResponseCode_MAX;
  static const int ResponseCode_ARRAYSIZE =
    Response_ResponseCode_ResponseCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseCode_descriptor() {
    return Response_ResponseCode_descriptor();
  }
  static inline const ::std::string& ResponseCode_Name(ResponseCode value) {
    return Response_ResponseCode_Name(value);
  }
  static inline bool ResponseCode_Parse(const ::std::string& name,
      ResponseCode* value) {
    return Response_ResponseCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .c4.Response.ResponseCode code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::c4::Response_ResponseCode code() const;
  inline void set_code(::c4::Response_ResponseCode value);

  // optional string errorMsg = 2;
  inline bool has_errormsg() const;
  inline void clear_errormsg();
  static const int kErrorMsgFieldNumber = 2;
  inline const ::std::string& errormsg() const;
  inline void set_errormsg(const ::std::string& value);
  inline void set_errormsg(const char* value);
  inline void set_errormsg(const char* value, size_t size);
  inline ::std::string* mutable_errormsg();
  inline ::std::string* release_errormsg();
  inline void set_allocated_errormsg(::std::string* errormsg);

  // @@protoc_insertion_point(class_scope:c4.Response)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_errormsg();
  inline void clear_has_errormsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* errormsg_;
  int code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Response_2eproto();
  friend void protobuf_AssignDesc_Response_2eproto();
  friend void protobuf_ShutdownFile_Response_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// ===================================================================


// ===================================================================

// Response

// required .c4.Response.ResponseCode code = 1;
inline bool Response::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::c4::Response_ResponseCode Response::code() const {
  return static_cast< ::c4::Response_ResponseCode >(code_);
}
inline void Response::set_code(::c4::Response_ResponseCode value) {
  assert(::c4::Response_ResponseCode_IsValid(value));
  set_has_code();
  code_ = value;
}

// optional string errorMsg = 2;
inline bool Response::has_errormsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_errormsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_errormsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_errormsg() {
  if (errormsg_ != &::google::protobuf::internal::kEmptyString) {
    errormsg_->clear();
  }
  clear_has_errormsg();
}
inline const ::std::string& Response::errormsg() const {
  return *errormsg_;
}
inline void Response::set_errormsg(const ::std::string& value) {
  set_has_errormsg();
  if (errormsg_ == &::google::protobuf::internal::kEmptyString) {
    errormsg_ = new ::std::string;
  }
  errormsg_->assign(value);
}
inline void Response::set_errormsg(const char* value) {
  set_has_errormsg();
  if (errormsg_ == &::google::protobuf::internal::kEmptyString) {
    errormsg_ = new ::std::string;
  }
  errormsg_->assign(value);
}
inline void Response::set_errormsg(const char* value, size_t size) {
  set_has_errormsg();
  if (errormsg_ == &::google::protobuf::internal::kEmptyString) {
    errormsg_ = new ::std::string;
  }
  errormsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Response::mutable_errormsg() {
  set_has_errormsg();
  if (errormsg_ == &::google::protobuf::internal::kEmptyString) {
    errormsg_ = new ::std::string;
  }
  return errormsg_;
}
inline ::std::string* Response::release_errormsg() {
  clear_has_errormsg();
  if (errormsg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = errormsg_;
    errormsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Response::set_allocated_errormsg(::std::string* errormsg) {
  if (errormsg_ != &::google::protobuf::internal::kEmptyString) {
    delete errormsg_;
  }
  if (errormsg) {
    set_has_errormsg();
    errormsg_ = errormsg;
  } else {
    clear_has_errormsg();
    errormsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace c4

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::c4::Response_ResponseCode>() {
  return ::c4::Response_ResponseCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Response_2eproto__INCLUDED
